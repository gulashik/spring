# Основная конфигурация Spring Boot приложения
spring:
  application:
    name: spring-postgres-app

  # Конфигурация подключения к базе данных
  # Образовательный момент: Использование переменных окружения
  # позволяет легко изменять настройки в разных средах
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:testdb}
    username: ${DB_USER:user}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver

  # Конфигурация JPA/Hibernate
  jpa:
    hibernate:
      # ddl-auto: update - Hibernate автоматически обновляет схему БД
      # Образовательный момент: В продакшене лучше использовать validate или none
      ddl-auto: update
    show-sql: ${SHOW_SQL:false}  # Логирование SQL запросов
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true  # Форматирование SQL в логах
    defer-datasource-initialization: true

  sql:
    init:
      mode: always  # Выполнение SQL скриптов при старте

# Конфигурация веб-сервера
server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful  # Graceful shutdown для корректного завершения запросов

# Конфигурация Spring Boot Actuator для мониторинга
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    db:
      enabled: true

# Конфигурация логирования
logging:
  level:
    org.springframework.web: ${LOG_LEVEL:INFO}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    ru.otus.hw: ${APP_LOG_LEVEL:INFO}  # Логирование для пакета приложения
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"