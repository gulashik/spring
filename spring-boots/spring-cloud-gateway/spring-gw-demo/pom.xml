<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.gualsh.demo.gw</groupId>
    <artifactId>spring-cloud-gateway-demo</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>Spring Cloud Gateway Demo</name>
    <description>Educational project demonstrating Spring Cloud Gateway capabilities</description>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Spring Boot версия 3.3.4 для актуальных возможностей -->
        <spring-boot.version>3.3.4</spring-boot.version>
        <!-- Spring Cloud 2023.0.3 совместимая с Spring Boot 3.3.x -->
        <spring-cloud.version>2023.0.3</spring-cloud.version>
        <!-- Lombok для упрощения кода -->
        <lombok.version>1.18.30</lombok.version>
        <!-- Validation API для валидации -->
        <jakarta.validation.version>3.0.2</jakarta.validation.version>
        <!-- Jackson для JSON обработки -->
        <jackson.version>2.15.2</jackson.version>
        <!-- Micrometer для метрик -->
        <micrometer.version>1.12.0</micrometer.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot BOM для управления версиями -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Spring Cloud BOM для управления версиями Cloud компонентов -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring Cloud Gateway Starter
             Включает: WebFlux, Netty, Gateway Core, Validation
             Используется для: основной функциональности Gateway -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>

        <!-- Spring Boot Starter Actuator
             Включает: Micrometer, Health checks, Metrics endpoints
             Используется для: мониторинга и управления приложением -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Spring Boot Starter Validation
             Включает: Hibernate Validator, Jakarta Validation API
             Используется для: валидации входящих данных -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Spring Boot Configuration Processor
             Включает: обработка @ConfigurationProperties
             Используется для: автодополнения в IDE для конфигурации -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Spring Cloud Circuit Breaker Gateway
             Включает: Resilience4j integration
             Используется для: circuit breaker pattern в Gateway -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
        </dependency>

        <!-- Spring Boot Starter Data Redis Reactive
             Включает: Lettuce, Reactive Redis support
             Используется для: кэширования и rate limiting -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis-reactive</artifactId>
        </dependency>

        <!-- Lombok для упрощения кода
             Включает: аннотации для генерации кода
             Используется для: автогенерации getters, setters, constructors -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Micrometer Prometheus Registry
             Включает: Prometheus metrics format
             Используется для: экспорта метрик в Prometheus -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <!-- Jackson Datatype JSR310
             Включает: поддержка Java 8 Time API
             Используется для: сериализации LocalDateTime и др. -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- Jakarta Validation API
             Включает: стандартные validation аннотации
             Используется для: валидации конфигурации -->
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta.validation.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin для сборки executable jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- Maven Compiler Plugin с поддержкой Lombok -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                    <annotationProcessorPaths>
                        <!-- Lombok annotation processor -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <!-- Spring Boot Configuration Processor -->
                        <path>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                            <version>${spring-boot.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>